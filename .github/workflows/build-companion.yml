name: Build Frontend Image

on:
  workflow_call:
    inputs:
      version:
        description: "The version to tag the frontend image - e.g. 1.2.32"
        required: true
        type: string
      environment:
        description: "The environment to deploy the frontend - e.g. development, staging, production"
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create .env
        run: |
          echo CLERK_SECRET_KEY="${{ secrets.CLERK_SECRET_KEY }}" > $(pwd)/.env
          echo NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY="${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}" >> $(pwd)/.env
          echo CLOUD_URL="${{ secrets.CLOUD_URL }}" >> $(pwd)/.env
          echo TOKEN="${{ secrets.TOKEN }}" >> $(pwd)/.env
          echo DATABASE_URL="${{ secrets.DATABASE_URL }}" >> $(pwd)/.env
          echo NEXT_PUBLIC_API_KEY_CF_IMG="${{ secrets.NEXT_PUBLIC_API_KEY_CF_IMG }}" >> $(pwd)/.env
          echo NEXT_PUBLIC_CLERK_SIGN_IN_URL="${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_URL }}" >> $(pwd)/.env
          echo OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" >> $(pwd)/.env
          echo NEXT_PUBLIC_MEILI_HOST="${{ secrets.NEXT_PUBLIC_MEILI_HOST }}" >> $(pwd)/.env
          echo MEILI_MASTER_KEY="${{ secrets.MEILI_MASTER_KEY }}" >> $(pwd)/.env
          echo MEILI_DEFAULT_SEARCH_API_KEY="${{ secrets.MEILI_DEFAULT_SEARCH_API_KEY }}" >> $(pwd)/.env
          echo MEILI_DEFAULT_SEARCH_UID="${{ secrets.MEILI_DEFAULT_SEARCH_UID }}" >> $(pwd)/.env
          echo MEILI_DEFAULT_ADMIN_API_KEY="${{ secrets.MEILI_DEFAULT_ADMIN_API_KEY }}" >> $(pwd)/.env
          echo MEILI_DEFAULT_ADMIN_UID="${{ secrets.MEILI_DEFAULT_ADMIN_UID }}" >> $(pwd)/.env
          echo NEXT_PUBLIC_OIDC_AUTHORITY="${{ secrets.NEXT_PUBLIC_OIDC_AUTHORITY }}" >> $(pwd)/.env
          echo NEXT_PUBLIC_OIDC_CLIENT_ID="${{ secrets.NEXT_PUBLIC_OIDC_CLIENT_ID }}" >> $(pwd)/.env
          echo NEXT_PUBLIC_OIDC_REDIRECT_URI="${{ secrets.NEXT_PUBLIC_OIDC_REDIRECT_URI }}" >> $(pwd)/.env
          echo NEXT_PUBLIC_OIDC_LOGOUT_REDIRECT_URI="${{ secrets.NEXT_PUBLIC_OIDC_LOGOUT_REDIRECT_URI }}" >> $(pwd)/.env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: alo42/frontend:${{ inputs.environment }}-${{ inputs.version }}

  tagHelm:
    needs: build
    uses: your-commonbase/commonbase-workflows/.github/workflows/tag.yml@main
    with:
      APP: frontend
      VERSION: ${{ inputs.environment }}-${{ inputs.version }}
      ENVIRONMENT: ${{ inputs.environment }}
    secrets:
      PAT: ${{ secrets.PAT }}
